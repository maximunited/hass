---
# - alias: "Internet Speed Glow Connect Great"
#   trigger:
#     - platform: template
#       value_template: "{{ states('sensor.speedtest_download')|float >= 10 }}"
#   action:
#     - service: shell_command.green
#
# - alias: "Internet Speed Glow Connect Poor"
#   trigger:
#     - platform: template
#       value_template: "{{ states('sensor.speedtest_download')|float < 10 }}"
#   action:
#     - service: shell_command.red

# - id: notify-update
#   alias: Update Available Notifications
#   initial_state: 'on'
#   trigger:
#     platform: state
#     entity_id: updater.updater
#   action:
#     service: notify.notify
#     data:
#       message: "Homeudo hciconfig hci0 down ; sleep 2 ; sudo hciconfig hci0 up
#       Assistant  {{ states.updater.updater.state }}  is now available."

#####################
#####################
#####################

- alias: ambient lights on if someone's home
  trigger:
    - platform: sun
      event: sunset
      offset: "-00:30:00"
  condition:
    - condition: state
      entity_id: group.household
      state: 'home'
  action:
    - service: scene.turn_on
      entity_id: scene.ambient_full

#####################
#####################
#####################

- alias: "Boo's home"
  trigger:
    platform: state
    entity_id: person.dana
    from: 'not_home'
    to: 'home'
    #for:
    #  minutes: 5
  condition:
    - condition: and
      conditions:
      - condition: state
        entity_id: person.maxim
        state: 'not_home'
      - condition: time
        after: '12:00:00'
        before: '23:00:00'
  action:
    service: notify.notify_pushbullet
    data:
      message: "Boo's home!"
      target: "device/Samsung SGS 7 Edge"

#####################
#####################
#####################

- alias: Startup Notification
  trigger:
    platform: homeassistant
    event: start
  action:
    service: ifttt.trigger
    data: {"event":"HA event", "value1":"Home Assistant started"}

- alias: 'Update Available Notifications'
  trigger:
    platform: state
    entity_id: updater.updater
  action:
    service: notify.notify_html5
    data:
      message: 'Update for HA is available.'
      title: 'Home Assistant'

- alias: 'Notify - Home Assistant docker tag changed'
  trigger:
    - platform: state
      entity_id: sensor.docker_version_available
  condition:
      condition: template
      value_template: >
        {{ trigger.to_state.state not in [trigger.from_state.state, 'unavailable'] }}
  action:
    - service: persistent_notification.create
      data_template:
        title: "Home Assistant update available"
        message: "Home Assistant docker tag changed from {{ trigger.from_state.state }} to {{ trigger.to_state.state }}"
    - service: notify.notify_html5
      data_template:
        title: "Home Assistant update available"
        message: "Home Assistant docker tag changed from {{ trigger.from_state.state }} to {{ trigger.to_state.state }}"

- alias: 'Notify on shelly FW update'
  initial_state: true
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.shelly_73c9f8_fw_update
        - binary_sensor.shelly_73fd26_fw_update
        - binary_sensor.shelly_e4cdaf_fw_update
        - binary_sensor.shelly_e6292b_fw_update
      to: 'on'
      for:
        minutes: 30
  action:
    - service: persistent_notification.create
      data_template:
        title: "Shelly FW update available"
        message: "{{ trigger.to_state.attributes.friendly_name }} has a FW update available"
    - service: notify.notify_html5
      data_template:
        title: "Shelly FW update available"
        message: "{{ trigger.to_state.attributes.friendly_name }} has a FW update available"
      data:
        data:
          actions:
            - action: update_shelly_fw
              title: "Update FW on {{ trigger.to_state.attributes.friendly_name }}"
            - action: dismiss_notification
              title: "Dismiss"

- alias: 'Handle HTML5 notification action: Update FW'
  initial_state: true
  trigger:
    - platform: event
      event_type: html5_notification.clicked
      event_data:
        action: update_shelly_fw
  action:
    #- service: switch.turn_on
    #  data:
    #    entity_id: switch.docker_duckdns
    - service: system_log.write
      data_template:
        message: "Clicked {{trigger.event.data}}"



      # - alias: 'mark Maxim home'
      #   condition:
      #     condition: state
      #     entity_id: input_boolean.maxim_home
      #     state: 'off'
      #   trigger:
      #     platform: state
      #     entity_id: person.maxim
      #     to: 'away'
      #   action:
      #     service: input_boolean.turn_on
      #     data:
      #       entity_id: input_boolean.maxim_home
      # 
      # - alias: 'mark Maxim away'
      #   condition:
      #     condition: state
      #     entity_id: input_boolean.maxim_home
      #     state: 'on'
      #   trigger:
      #     platform: state
      #     entity_id: person.maxim
      #     to: 'home'
      #   action:
      #     service: input_boolean.turn_off
      #     data:
      #       entity_id: input_boolean.maxim_home

#################################################################################################
# yamllint disable-line rule:line-length
### https://github.com/aFrankLion/hass-google_keep#ifttt-applet-and-home-assistant-automation ###
#################################################################################################
# OBSOLETE as Google assistant finally supports Google keep
# - alias: Google Keep list update from google assistant and ifttt
#   trigger:
#     platform: event
#     event_type: ifttt_webhook_received
#     event_data:
#       action: call_service
#   condition:
#     - condition: template
#       value_template: '{% if trigger.event.data.title is defined %}True{% else %}False{% endif %}'
#   action:
#     service_template: '{{ trigger.event.data.service }}'
#     data_template:
#       title: '{{ trigger.event.data.title }}'
#       things: '{{ trigger.event.data.things | capitalize}}'

- alias: Google Keep list update via text box
  trigger:
    platform: state
    entity_id: input_text.add_to_grocery_list
  action:
    service: google_keep.add_to_list
    data_template:
      title: 'Grocery list'
      things: '{{ states.input_text.add_to_grocery_list.state }}'

- alias: Google broadcast
  trigger:
    platform: state
    entity_id: input_text.google_broadcast
  action:
    - service: tts.google_say
      data_template:
        entity_id: media_player.all_devices
        message: "{{ states.input_text.google_broadcast.state }}"

- alias: Turn ON or OFF input_boolean.living_ac from IFTTT
  trigger:
    platform: event
    event_type: ifttt_webhook_received
    event_data:
      action: call_service
  condition:
    - condition: template
      value_template: '{% if trigger.event.data.title is not defined %}True{% else %}False{% endif %}'
    - condition: template
      value_template: '{% if trigger.event.data.entity_id is defined %}True{% else %}False{% endif %}'
  action:
    service_template: '{{ trigger.event.data.service | lower }}'
    data_template:
      entity_id: '{{ trigger.event.data.entity_id | lower }}'

- alias: Report indoor temperature from IFTTT (Google Home)
  trigger:
    platform: event
    event_type: ifttt_webhook_received
    event_data:
      action: call_service
  condition:
    - condition: template
      value_template: '{% if trigger.event.data.title is not defined %}True{% else %}False{% endif %}'
    - condition: template
      value_template: '{% if trigger.event.data.entity_id is not defined %}True{% else %}False{% endif %}'
  action:
    service_template: '{{ trigger.event.data.service | lower }}'

#################################################################################

- id: notify_new_devices
  alias: Notify for new devices
  trigger:
    platform: event
    event_type: device_tracker_new_device
  action:
    - service: persistent_notification.create
      data_template:
        title: >
          Newly tracked: {{trigger.event.data.entity_id}}
        message: >
          New device tracked: ({{trigger.event.data.entity_id}})
          Host: {{trigger.event.data.host_name}}
          Mac-address: {{trigger.event.data.mac}}
          Data: {{trigger.event.data}}
    - service: notify.notify_html5
      data_template:
        message: >
           New device:
           {{trigger.event.data.host_name}}
           ({{trigger.event.data.entity_id}})
        title: New device
    - service: notify.telegram_bot
      data_template:
        message: >
          New device:
          {{trigger.event.data.host_name}}
          ({{trigger.event.data.entity_id}})
          Mac: {{trigger.event.data.mac}}
        title: Home Assistant

### https://github.com/aFrankLion/hass-google_keep#home-assistant-service
- alias: Low Battery Notification
  trigger:
    - platform: numeric_state
      entity_id:
        - sensor.basil_battery
        - sensor.ananas_battery
        - sensor.anthurium_battery
        - sensor.kalanchoe_poseidon_pink_battery
        - sensor.peppermint_battery
        - sensor.portulacaria_afra_battery
        - sensor.crassula_ovata_jade_plant_battery
      below: 20
  action:
    service: google_keep.add_to_list
    data_template:
      title: 'Home Supplies'
      things: 'Batteries for {{ trigger.to_state.name }}.'

### https://www.reddit.com/r/pihole/comments/bbhd0h/loving_the_home_assistant_pihole_component/
# - id: toggle Pihole switch
#  alias: "Switch - Toggle Pi-Hole"
#  initial_state: 'on'
#  trigger:
#    - platform: state
#      entity_id: switch.pihole_temp_disable
#      to: 'on'
#  action:
#    - delay: '00:05:01'
#    - service: switch.turn_off
#      entity_id: switch.pihole_temp_disable
