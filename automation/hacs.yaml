---

################################################################################
################################## HACS ########################################
################################################################################
- id: hacs_notify_new_repo
  alias: "Create a notification when something is added to HACS"
  trigger:
    platform: event
    event_type: hacs/repository
    event_data:
      action: registration
  condition:
    condition: template
    value_template: "{{ trigger.event.data.repository is defined }}"
  action:
    service: persistent_notification.create
    data_template:
      title: New repository in HACS
      message: >-
        {% set repo = trigger.event.data.repository %}
        {% set id = trigger.event.data.repository_id %}
        [{{ repo }}](/hacs/repository/{{ id }})
        was just added to HACS.

- id: hacs_notify_updates
  alias: "Create a notification when there is updates pending in HACS"
  trigger:
    platform: state
    entity_id: sensor.hacs
  condition:
    - condition: template
      value_template: "{{ states(trigger.entity_id) != 'unknown'}}"
    - condition: template
      value_template: "{{ (states(trigger.entity_id) | float) != 0}}"
  action:
    service: persistent_notification.create
    data_template:
      title: Updates pending in HACS
      message: >-
        {% for repo in state_attr(trigger.entity_id, 'repositories') %}
          **{{ repo.display_name }}** _{{ repo["installed_version"] }}_ => _{{ repo["available_version"] }}_
        {% endfor %}

#- alias: HACS Peristant Notification
#  initial_state: 'on'
#  trigger:
#    platform: numeric_state
#    entity_id: sensor.hacs
#    above: 0
#  action:
#    - service: persistent_notification.create
#      data:
#        message: "Update available!"
#        title: "HACS"
#    - service: notify.notify_html5
#      data:
#        message: 'Update for HACS available'
#        title: "HACS"
#################################################################################

